<xsl:stylesheet version = '1.0' xmlns:xsl='http://www.w3.org/1999/XSL/Transform'>

<!--
  - This Extensible Stylesheet Language Transformation file translates XML files
  - as generated by KBibTeX into nice HTML code.
  -
  - This file was written by Thomas Fischer <fischer@unix-ag.uni-kl.de>
  - It is released under the GNU Public License version 2 or later.
  -->

<xsl:output omit-xml-declaration="yes" indent="no" encoding="UTF-8"/>

<!-- ==============================================================================
     Maintain original HTML tags
-->
<xsl:template match="a|abbr|acronym|address|applet|b|big|blockquote|br|cite|code|del|dfn|div|em|hr|i|kbd|p|param|pre|q|quote|samp|script|span|small|strike|strong|sub|sup|tt|var|button|fieldset|form|input|label|legend|object|option|optgroup|select|caption|col|colgroup|table|tbody|td|tfoot|th|thead|tr|dl|dd|dt|ol|ul|li|img|quote|quotation" xmlns:html="http://www.w3.org/1999/XSL/some">
<xsl:copy>
<xsl:copy-of select="@*" />
<xsl:apply-templates />
</xsl:copy>
</xsl:template>



<xsl:template match="text">
<xsl:apply-templates />
</xsl:template>

<xsl:template match="person">
<xsl:value-of select="lastname"/><xsl:if test="string-length(firstname)>0"><xsl:text>, </xsl:text>
<xsl:value-of select="firstname"/></xsl:if>
</xsl:template>

<xsl:template match="authors">
<xsl:for-each select="person">
<xsl:apply-templates select="."/><xsl:if test="position()!=last()"><xsl:text>, </xsl:text>
</xsl:if>
<xsl:if test="position()=last()-1 and @etal!='true'">
<xsl:text> and </xsl:text>
</xsl:if>
</xsl:for-each>
<xsl:if test="@etal='true'"><xsl:text> </xsl:text><i>et&#160;al.</i></xsl:if>
<br/>
</xsl:template>

<xsl:template match="editors">
<xsl:text>, Eds: </xsl:text>
<xsl:for-each select="person">
<xsl:apply-templates select="."/><xsl:if test="position()!=last()"><xsl:text>, </xsl:text>
</xsl:if>
<xsl:if test="position()=last()-1 and @etal!='true'"><xsl:text> and </xsl:text></xsl:if>
</xsl:for-each>
<xsl:if test="@etal='true'"><xsl:text> </xsl:text><i>et&#160;al.</i></xsl:if>
</xsl:template>

<xsl:template match="title">
<b><xsl:value-of select="."/></b><br/>
</xsl:template>

<xsl:template match="booktitle">
<i><xsl:value-of select="."/></i><br/>
</xsl:template>

<xsl:template match="school">
<xsl:value-of select="."/>
<xsl:text>, </xsl:text>
</xsl:template>

<xsl:template match="journal">
<i><xsl:value-of select="."/></i>
<xsl:if test="string-length(../volume)>0">
  <xsl:text> </xsl:text><xsl:value-of select="../volume"/>
  <xsl:if test="string-length(../number)>0">
    <xsl:text>(</xsl:text>
    <xsl:value-of select="../number"/>
    <xsl:text>)</xsl:text>
  </xsl:if>
</xsl:if>
<xsl:text>, </xsl:text>
</xsl:template>

<xsl:template match="institution">
<i><xsl:value-of select="."/></i>
<xsl:if test="string-length(../number)>0">
  <xsl:text> No. </xsl:text>
  <xsl:value-of select="../number"/>
</xsl:if>
<xsl:text>, </xsl:text>
</xsl:template>

<xsl:template match="publisher">
<xsl:value-of select="."/>
<xsl:text>, </xsl:text>
</xsl:template>

<xsl:template match="volume">
<xsl:if test="string-length(../journal)=0">
<!-- do not print volume if there is "journal" field,
     which prints the volume, too.                     -->

  <xsl:text>volume </xsl:text>
  <xsl:value-of select="."/>
  <xsl:text>, </xsl:text>
</xsl:if>
</xsl:template>

<xsl:template match="edition">
<xsl:value-of select="."/>
<xsl:text> edition</xsl:text>
<xsl:text>, </xsl:text>
</xsl:template>

<xsl:template match="pages">
<xsl:value-of select="."/>
<xsl:text>, </xsl:text>
</xsl:template>

<xsl:template match="year">
<xsl:if test="string-length(../month)>0">
<xsl:value-of select="../month"/>
<xsl:text> </xsl:text>
</xsl:if>
<xsl:value-of select="."/>
</xsl:template>

<xsl:template match="entry">
<xsl:apply-templates select="authors" />
<xsl:apply-templates select="title" />
<xsl:apply-templates select="booktitle" />
<xsl:apply-templates select="journal" />
<xsl:apply-templates select="school" />
<xsl:apply-templates select="volume" />
<xsl:apply-templates select="edition" />
<xsl:apply-templates select="publisher" />
<xsl:apply-templates select="institution" />
<xsl:apply-templates select="pages" />
<xsl:apply-templates select="editors" />
<xsl:apply-templates select="year" />
</xsl:template>

<xsl:template match="bibliography">
<xsl:apply-templates select="entry" />
</xsl:template>

</xsl:stylesheet>
